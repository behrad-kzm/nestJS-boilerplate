version: "3.3"

services:
  # mysql:
  #   image: mysql:8.0.31
  #   restart: always
  #   command: --default-authentication-plugin=mysql_native_password
  #   ports:
  #     - ${DATABASE_PORT}:3306
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
  #     MYSQL_DATABASE: ${DATABASE_NAME}
  #     MYSQL_PASSWORD: ${DATABASE_PASSWORD}

  # boilerplate:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./env-config:/usr/src/app/.env:ro,Z
  #   expose:
  #     - ${APP_PORT}
  #   depends_on:
  #     - mysql
  #   ports:
  #     - ${APP_PORT}:${APP_PORT}

  # apmserver:
  #   image: docker.elastic.co/apm/apm-server:7.13.0
  #   cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
  #   cap_drop: ["ALL"]
  #   ports:
  #   - 8200:8200
  #   command: >
  #      apm-server -e
  #        -E apm-server.rum.enabled=true
  #        -E setup.kibana.host=kibana:5601
  #        -E setup.template.settings.index.number_of_replicas=0
  #        -E apm-server.kibana.enabled=truedocker ps
  #        -E apm-server.kibana.host=kibana:5601
  #        -E output.elasticsearch.hosts=["elasticsearch:9200"]

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - 4317:4317
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      # - METRICS_STORAGE_TYPE=elasticsearch
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:6.4.0
    volumes:
      - ./infrastructure/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
    restart: unless-stopped

  # jaeger-collector:
  #   image: jaegertracing/jaeger-collector
  #   ports:
  #     - "14269:14269"
  #     - "14268:14268"
  #     - "14267:14267"
  #     - "14250:14250"
  #     - "9411:9411"
  #     - "4317:4317"
  #   networks:
  #     - elastic-jaeger
  #   restart: on-failure
  #   environment:
  #     - SPAN_STORAGE_TYPE=elasticsearch
  #   command: [
  #     "--es.server-urls=http://elasticsearch:9200",
  #     "--es.num-shards=1",
  #     "--es.num-replicas=0",
  #     "--log-level=error"
  #   ]
  #   depends_on:
  #     - elasticsearch

  # jaeger-agent:
  #   image: jaegertracing/jaeger-agent
  #   hostname: jaeger-agent
  #   command: ["--reporter.grpc.host-port=jaeger-collector:14250"]
  #   ports:
  #     - "5775:5775/udp"
  #     - "6831:6831/udp"
  #     - "6832:6832/udp"
  #     - "5778:5778"
  #   networks:
  #     - elastic-jaeger
  #   restart: on-failure
  #   environment:
  #     - SPAN_STORAGE_TYPE=elasticsearch
  #   depends_on:
  #     - jaeger-collector

  # jaeger-query:
  #   image: jaegertracing/jaeger-query
  #   environment:
  #     - SPAN_STORAGE_TYPE=elasticsearch
  #     - no_proxy=localhost
  #   ports:
  #     - "16686:16686"
  #     - "16687:16687"
  #   networks:
  #     - elastic-jaeger
  #   restart: on-failure
  #   command: [
  #     "--es.server-urls=http://elasticsearch:9200",
  #     "--span-storage.type=elasticsearch",
  #     "--log-level=debug"
  #   ]
  #   depends_on:
  #     - jaeger-agent


  kibana:
    image: kibana:6.4.0
    volumes:
      - ./infrastructure/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    environment:
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./infrastructure/otel-collector-config.yml:/etc/otel-collector-config.yml:ro,Z
    ports:
      - "1888:1888"
      - "8888:8888"
      - "8889:8889"
      - "13133:13133"
      - "4318:4318"
